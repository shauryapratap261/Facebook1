Design Facebook

Question Description

Design a simplified version of Facebook where users can create/delete posts,
follow/unfollow another user and are able to see the most recent posts in the
user's news feed. Following methods to be implemented:



1) createPost(userId, postId): Compose a new post.

2) getNewsFeed(userId): Retrieve the 10 most recent post ids in the user's news feed. Each item in the news feed must be posted by users who the user followed or by the user herself (Order -> most to least recent)

3) follow(followerId, followeeId): Follower follows a followee.

4) unfollow(followerId, followeeId): Follower unfollows a followee.

5) deletePost(userId, postId): Delete an existing post.

6) getNewsFeedPaginated(userId, pageNumber): Retrieve the most recent post ids in the user's news feed in a paginated manner. Each item in the news feed must be posted by users who the user followed or by the user herself (Order -> most to least recent) Assume pageSize= 2.



Evaluation points :

1) Test cases passed

2) Code structuring and cleanliness

3) Scale and concurrency



-----------------------------------
Objects

1. Post(it's kind of double linked list)
   - postId
   - time
   - Post prev
   - Post next

2. User
   - userId
   - Post postHead(like we do for LRU cache)
   - Post postTail(like we do for LRU cache)
   - Map<User, int>following

3. Facebook
    - timestamp
    - Map<userId, User>userMap
    + createPost(userId, postId) - > Get the user from the userId map and now add the post in the doubly linked list of the user.
    + follow(userId1, userId2)/follow(userId1, userId2) - > add/remove them to the following and followers map of each other.
    + deletePost(userId, postId) - get the post from the postMap of the user, then delete in constant time.
    + getNewsFeed(userId) -  get the users whom the user follows , note that the user follows himself as well.
                             get the posts of each of the users the userId follows, now enque them in a Priority queue(recent time first)
                             get top N(10) posts.